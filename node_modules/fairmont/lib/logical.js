// Generated by CoffeeScript 1.9.3
(function() {
  var assert, curry, describe, ref;

  ref = require("./helpers"), describe = ref.describe, assert = ref.assert;

  curry = require("./core").curry;

  describe("Logical functions", function(context) {
    var both, different, either, negate, neither, same;
    negate = function(f) {
      return function() {
        return !(f.apply(null, arguments));
      };
    };
    context.test("negate", function() {
      return assert(!((negate(function() {
        return true;
      }))()));
    });
    both = curry(function(f, g) {
      return function() {
        return (f.apply(null, arguments)) && (g.apply(null, arguments));
      };
    });
    either = curry(function(f, g) {
      return function() {
        return (f.apply(null, arguments)) || (g.apply(null, arguments));
      };
    });
    neither = negate(either);
    same = curry(function(f, g) {
      return function() {
        return (f.apply(null, arguments)) === (g.apply(null, arguments));
      };
    });
    different = curry(function(x, y) {
      return function() {
        return (f.apply(null, arguments)) !== (g.apply(null, arguments));
      };
    });
    return module.exports = {
      negate: negate,
      both: both,
      either: either,
      neither: neither,
      same: same,
      different: different
    };
  });

}).call(this);
