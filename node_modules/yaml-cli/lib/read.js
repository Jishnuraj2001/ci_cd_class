// Generated by CoffeeScript 1.10.0
(function() {
  var YAML, _read, async, get, isArray, isObject, path, read, ref, ref1, reference,
    slice = [].slice;

  ref = require("fairmont"), async = ref.async, read = ref.read, isObject = ref.isObject, isArray = ref.isArray;

  YAML = require("js-yaml");

  get = require("./reference").get;

  _read = async(function*(arg) {
    var current, i, j, key, keys, last, len, path, ref1, reference, result, root;
    path = arg.path, reference = arg.reference;
    root = current = YAML.safeLoad((yield read(path)));
    ref1 = reference.split("."), keys = 2 <= ref1.length ? slice.call(ref1, 0, i = ref1.length - 1) : (i = 0, []), last = ref1[i++];
    for (j = 0, len = keys.length; j < len; j++) {
      key = keys[j];
      current = get(current, key);
    }
    result = get(current, last);
    if ((isObject(result)) || (isArray(result))) {
      return YAML.safeDump(result);
    } else {
      return result;
    }
  });

  ref1 = process.argv.slice(2), path = ref1[0], reference = ref1[1];

  if ((path != null) && (reference != null)) {
    _read({
      path: path,
      reference: reference
    }).then(function(result) {
      return console.log(result);
    });
  } else {
    console.error("yaml: insufficient arguments");
    console.error("yaml <path> <reference>");
    process.exit(-1);
  }

  module.exports = _read;

}).call(this);
